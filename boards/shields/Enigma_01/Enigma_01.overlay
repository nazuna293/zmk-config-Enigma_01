#include <zephyr/dt-bindings/dt-util.h>
#include <zephyr/dt-bindings/adc/adc.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include "Enigma_01.dtsi"

/ {
    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        interrupt-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        gpios = <&gpio0 29 GPIO_ACTIVE_HIGH>,
                <&gpio0 4 GPIO_ACTIVE_HIGH>,
                <&gpio0 5 GPIO_ACTIVE_HIGH>,
                <&gpio1 11 GPIO_ACTIVE_HIGH>,
                <&gpio1 14 GPIO_ACTIVE_HIGH>,
                <&gpio1 13 GPIO_ACTIVE_HIGH>,
                <&gpio1 12 GPIO_ACTIVE_HIGH>;
        wakeup-source;
    };

    transform_a: transform_a {
        compatible = "zmk,matrix-transform";
        rows = <7>;
        columns = <7>;
        map = <
                    RC(4,6) RC(5,6)
            RC(1,0) RC(5,0) RC(3,1) RC(0,2) RC(5,2) RC(2,3) RC(0,4) RC(5,4) RC(2,5) RC(0,6)
            RC(2,0) RC(6,0) RC(4,1) RC(1,2) RC(6,2) RC(4,3) RC(1,4) RC(6,4) RC(3,5) RC(1,6)
            RC(3,0) RC(0,1) RC(5,1) RC(3,2) RC(0,3) RC(5,3) RC(2,4) RC(0,5) RC(4,5) RC(2,6)
            RC(4,0) RC(2,1) RC(6,1) RC(4,2) RC(1,3) RC(6,3) RC(3,4) RC(1,5) RC(6,5) RC(3,6)
        >;
    };

    studio_usb: studio_usb {
        compatible = "zmk,studio-rpc-usb-uart";
    };

    rotary_encoder: encoder_0 {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <24>;
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&rotary_encoder>;
        triggers-per-rotation = <12>;
    };

    chosen {
        zmk,kscan = &kscan0;
        zmk,physical-layout = &layout_a;  // layout_a = 1.0配列 layout_b = 1.5配列 layout_c = 2.0配列
        zmk,studio-rpc = &studio_usb;
    };
};
